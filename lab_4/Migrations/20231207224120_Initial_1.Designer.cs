// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_4;

#nullable disable

namespace lab_4.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231207224120_Initial_1")]
    partial class Initial_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("System.Collections.Generic.List<lab_4.Models.IAbstractItem>", b =>
                {
                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.ToTable("List<IAbstractItem>");
                });

            modelBuilder.Entity("lab_4.Models.Container", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("PortID")
                        .HasColumnType("int");

                    b.Property<string>("weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PortID");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("lab_4.Models.Port", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("lab_4.Models.Ship", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int?>("PortID")
                        .HasColumnType("int");

                    b.Property<double>("fuel")
                        .HasColumnType("float");

                    b.Property<double>("fuelConsumptionPerKM")
                        .HasColumnType("float");

                    b.Property<int>("maxNumberOfAllContainers")
                        .HasColumnType("int");

                    b.Property<int>("maxNumberOfHeavyContainers")
                        .HasColumnType("int");

                    b.Property<int>("maxNumberOfLiquidContainers")
                        .HasColumnType("int");

                    b.Property<int>("maxNumberOfRefrigeratedContainers")
                        .HasColumnType("int");

                    b.Property<int>("totalWeightCapacity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PortID");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("lab_4.Models.SmallItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ContainerID")
                        .HasColumnType("int");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContainerID");

                    b.ToTable("SmallItem");
                });

            modelBuilder.Entity("lab_4.Models.Container", b =>
                {
                    b.HasOne("lab_4.Models.Port", null)
                        .WithMany("containers")
                        .HasForeignKey("PortID");
                });

            modelBuilder.Entity("lab_4.Models.Ship", b =>
                {
                    b.HasOne("lab_4.Models.Port", "currentPort")
                        .WithMany("history")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab_4.Models.Port", null)
                        .WithMany("current")
                        .HasForeignKey("PortID");

                    b.Navigation("currentPort");
                });

            modelBuilder.Entity("lab_4.Models.SmallItem", b =>
                {
                    b.HasOne("lab_4.Models.Container", null)
                        .WithMany("items")
                        .HasForeignKey("ContainerID");
                });

            modelBuilder.Entity("lab_4.Models.Container", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("lab_4.Models.Port", b =>
                {
                    b.Navigation("containers");

                    b.Navigation("current");

                    b.Navigation("history");
                });
#pragma warning restore 612, 618
        }
    }
}
